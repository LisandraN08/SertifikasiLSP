<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8R/OdzBURgud/QAAAABJRU5ErkJggg==
</value>
  </data>
</root>